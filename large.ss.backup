(define largest-in-list
  (letrec ([max-list
             (lambda (x)
            (cond
              [(null? (cdr x)) (car x)]
              [(> (car x) (max-list (cdr x))) (car x)]
              [else (max-list (cdr x))])])
    (lambda (n)
      (cond
        [(not (andmap pair? n)) #f]
        [else (max-list (max-list x))]
      )))
  
